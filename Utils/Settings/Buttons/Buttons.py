from Models.Button import make_button

from Utils.Settings.Colours import GRAY_RGB, WHITE_RGB, RED_RGB, DARK_RED_RGB, BLACK_RGB
from Utils.Settings.Paths import FONT_PATH
from Utils.Settings.Buttons.ButtonsTexts import START, EXIT, SWITCH_SHIELDS, SWITCH_WEAPONS, SELECT_1_AUTO, SELECT_2_AUTO, SELECT_3_AUTO, SELECT_4_AUTO, SELECT_5_AUTO, SELECT_1, SELECT_2, SELECT_3, SELECT_4, SELECT_5


MAIN_MENU_START_BUTTON = make_button(300, 300, 100, 50, 1, GRAY_RGB, BLACK_RGB, START, BLACK_RGB, 20, FONT_PATH)
MAIN_MENU_EXIT_BUTTON = make_button(300, 350, 100, 50, 1, GRAY_RGB, BLACK_RGB, EXIT, BLACK_RGB, 20, FONT_PATH)

FIRST_AUTO_SAVE_BUTTON = make_button(20, 100, 100, 50, 1, GRAY_RGB, BLACK_RGB, SELECT_1_AUTO, BLACK_RGB, 15, FONT_PATH)
SECOND_AUTO_SAVE_BUTTON = make_button(160, 100, 100, 50, 1, GRAY_RGB, BLACK_RGB, SELECT_2_AUTO, BLACK_RGB, 15, FONT_PATH)
THIRD_AUTO_SAVE_BUTTON = make_button(300, 100, 100, 50, 1, GRAY_RGB, BLACK_RGB, SELECT_3_AUTO, BLACK_RGB, 15, FONT_PATH)
FOURTH_AUTO_SAVE_BUTTON = make_button(440, 100, 100, 50, 1, GRAY_RGB, BLACK_RGB, SELECT_4_AUTO, BLACK_RGB, 15, FONT_PATH)
FIFTH_AUTO_SAVE_BUTTON = make_button(580, 100, 100, 50, 1, GRAY_RGB, BLACK_RGB, SELECT_5_AUTO, BLACK_RGB, 15, FONT_PATH)

FIRST_SAVE_BUTTON = make_button(20, 300, 100, 50, 1, GRAY_RGB, BLACK_RGB, SELECT_1, BLACK_RGB, 15, FONT_PATH)
SECOND_SAVE_BUTTON = make_button(160, 300, 100, 50, 1, GRAY_RGB, BLACK_RGB, SELECT_2, BLACK_RGB, 15, FONT_PATH)
THIRD_SAVE_BUTTON = make_button(300, 300, 100, 50, 1, GRAY_RGB, BLACK_RGB, SELECT_3, BLACK_RGB, 15, FONT_PATH)
FOURTH_SAVE_BUTTON = make_button(440, 300, 100, 50, 1, GRAY_RGB, BLACK_RGB, SELECT_4, BLACK_RGB, 15, FONT_PATH)
FIFTH_SAVE_BUTTON = make_button(580, 300, 100, 50, 1, GRAY_RGB, BLACK_RGB, SELECT_5, BLACK_RGB, 15, FONT_PATH)

SWORD_CHANGE_BUTTON = make_button(0, 0, 200, 15, 0, GRAY_RGB, WHITE_RGB, SWITCH_WEAPONS, WHITE_RGB, 15, FONT_PATH)
SHIELD_CHANGE_BUTTON = make_button(0, 0, 200, 15, 0, GRAY_RGB, WHITE_RGB, SWITCH_SHIELDS, WHITE_RGB, 15, FONT_PATH)


def get_pressed_button(buttons, mouse_clck_pos):
    for button in buttons:
        if button.view.rect.collidepoint(mouse_clck_pos):
            return button
    return None
